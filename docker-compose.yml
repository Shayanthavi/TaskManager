version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: task-manager-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Saya@1307
      MYSQL_DATABASE: task_manager_db
      MYSQL_USER: task_user
      MYSQL_PASSWORD: task_password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      # Optional: Add initialization scripts if needed
      # - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-manager-network

  # Spring Boot Backend
  backend:
    build: 
      context: ./task-manager-backend
      dockerfile: Dockerfile
    container_name: task-manager-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/task_manager_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Saya@1307
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:8080/api/auth/login || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - task-manager-network

  # Angular Frontend
  frontend:
    build:
      context: ./task-manager-frontend
      dockerfile: Dockerfile
    container_name: task-manager-frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    networks:
      - task-manager-network

networks:
  task-manager-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
